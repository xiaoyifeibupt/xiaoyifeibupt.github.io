{"name":"青玉案","tagline":"Just For Fun","body":"Rob Pike在《The Practice of Programming》中使用约30行代码，实现了一个正则表达式匹配器，用来处理以下的模型。\r\n字符\t含义\r\nc\t匹配认字的字母c\r\n.(句点)\t匹配任意的单个字符\r\n^\t匹配输入字符串的开头\r\n$\t匹配输入字符串的结尾\r\n*\t匹配前一个字符的零个或者多个出现\r\n 这段代码紧凑、优雅，高效并且实用,同时展示了C指针的强大功能。\r\n`/*match :在text中查找regexp*/\r\nint match(char *regexp,char *text)\r\n{\r\n if(regexp[0] == '^')\r\n  return matchhere(regexp+1,text);\r\n do{ /*即使字符串为空也必须检查*/\r\n  if (matchhere(regexp,text))\r\n   return 1;\r\n }while (*text++!= '\\0');\r\n return 0;\r\n}\r\n/*matchhere在text的开头查找regexp*/\r\nint matchhere(char *regexp,char *text)\r\n{\r\n if (regexp[0] == '\\0')\r\n  return 1;\r\n if (regexp[1] == '*')\r\n  return matchstar(regexp[0],regexp+2,text);\r\n if (regexp[0] == '$' && regexp[1]=='\\0')\r\n  return *text == '\\0';\r\n if (*text!='\\0' && (regexp[0]=='.' || regexp[0]==*text))\r\n  return matchhere(regexp+1,text+1);\r\n return 0;\r\n}\r\n/*matchstar :在text的开头查找C*regexp*/\r\nint matchstar (int c,char *regexp,char *text)\r\n{\r\n do { /*通配符*匹配零个或多个实例*/\r\n  if (matchhere(regexp,text))\r\n   return 1;\r\n }while (*text!='\\0' && (*text++ ==c || c== '.'));\r\n return 0;\r\n}`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}